<?xml version="1.0" standalone="no"?>

<kickstart interface="public">

<description>
Net configuration for all nodes installed with Ubuntu.
</description>

<si_copyright>
(c) 2006 - 2015 StackIQ Inc.
All rights reserved. stacki(r) v3.0 www.stacki.com
</si_copyright>

<copyright>
Copyright (c) 2000 - 2010 The Regents of the University of California.
All rights reserved. Rocks(r) v5.4 www.rocksclusters.org	
</copyright>


<main>
<netcfg>choose_interface select auto</netcfg>
<netcfg>get_nameservers string &Kickstart_PrivateAddress;</netcfg>
<netcfg>get_hostname string unassigned-hostname</netcfg>
<netcfg>get_domain string unassigned-domain</netcfg>
</main>

<late_command cond="'&netcfg;' == 'static'">
/bin/echo "auto lo" &gt; /target/etc/network/interfaces.static;
/bin/echo "iface lo inet loopback" &gt;&gt; /target/etc/network/interfaces.static;
/bin/echo "" &gt;&gt; /target/etc/network/interfaces.static;
<eval shell="/opt/stack/bin/python">
import stack.api
host = "&hostname;"
ifaces = stack.api.Call('list host interface', [host])
networks = stack.api.Call('list network')
file = "/target/etc/network/interfaces.static;"
for iface in ifaces:
        b = stack.api.Call('list network', [iface['network']])[0]
        eth,ip,mask,gw = iface['interface'],iface['ip'],b['mask'],b['gateway']
	print '/bin/echo "auto %s" &gt;&gt; %s' % (eth,file)
	print '/bin/echo "iface %s inet static" &gt;&gt; %s' % (eth,file)
	print '/bin/echo "  address %s" &gt;&gt; %s' % (ip,file)
	print '/bin/echo "  netmask %s" &gt;&gt; %s' % (mask,file)
	print '/bin/echo "  gateway %s" &gt;&gt; %s' % (gw,file)
	print '/bin/echo "  nameservers &Kickstart_PrivateDNSServers;" &gt;&gt; %s' % (file)
	print '/bin/echo "" &gt;&gt; %s' % (file)
</eval>
in-target /bin/cp /target/etc/network/interfaces.static /target/etc/etc/network/interfaces;
rm -f /usr/lib/finish-install.d/55netcfg-copy-config /usr/lib/finish-install.d/50config-target-network;
cp /target/etc/network/interfaces.static /target/etc/network/interfaces;
;
</late_command>

</kickstart> 
