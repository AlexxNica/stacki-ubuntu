<?xml version="1.0" standalone="no"?>
<preseed>

	<description>
	Net configuration for all nodes installed with Ubuntu.
	</description>

	<si_copyright>
	(c) 2006 - 2016 StackIQ Inc.
	All rights reserved. stacki(r) v3.0 www.stacki.com
	</si_copyright>


	<main>
		<netcfg>choose_interface select auto</netcfg>
		<netcfg>get_nameservers string &Kickstart_PrivateAddress;</netcfg>
		<netcfg>get_hostname string unassigned-hostname</netcfg>
		<netcfg>get_domain string unassigned-domain</netcfg>
	</main>

<late_command cond="'&ubuntu.netcfg;' == 'static'">
/bin/echo "auto lo" &gt; /target/etc/network/interfaces.static;
/bin/echo "iface lo inet loopback" &gt;&gt; /target/etc/network/interfaces.static;
/bin/echo "" &gt;&gt; /target/etc/network/interfaces.static;
<eval shell="/opt/stack/bin/python">
import stack.api
host = "&hostname;"
ifaces = stack.api.Call('list host interface', [host])
networks = stack.api.Call('list network')
file = "/target/etc/network/interfaces.static;"
for iface in ifaces:
	if iface['network'] == None:
		continue
	else:
	        b = stack.api.Call('list network', [iface['network']])[0]
	        eth,ip,mask,gw = iface['interface'],iface['ip'],b['mask'],b['gateway']
		print '/bin/echo "auto %s" &gt;&gt; %s' % (eth,file)
		print '/bin/echo "iface %s inet static" &gt;&gt; %s' % (eth,file)
		print '/bin/echo "  address %s" &gt;&gt; %s' % (ip,file)
		print '/bin/echo "  netmask %s" &gt;&gt; %s' % (mask,file)
		print '/bin/echo "  gateway %s" &gt;&gt; %s' % (gw,file)
		print '/bin/echo "  nameservers &Kickstart_PrivateDNSServers;" &gt;&gt; %s' % (file)
		print '/bin/echo "" &gt;&gt; %s' % (file)
</eval>
<eval shell="/opt/stack/bin/python">
from stack.api import Call as call
host = '&hostname;'
ifaces = call('list host interface', [host])
for iface in ifaces:
	line = 'SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", '
	line += 'ATTR{address}=="%s", ATTR{type}=="1", ' % iface['mac']
	line += 'KERNEL=="eth*", NAME="%s"' % iface['interface']
	print "/bin/echo '%s' &gt;&gt; /target/lib/udev/rules.d/10-network.rules;" % line
</eval>
in-target /bin/cp /target/etc/network/interfaces.static /target/etc/etc/network/interfaces;
rm -f /usr/lib/finish-install.d/55netcfg-copy-config /usr/lib/finish-install.d/50config-target-network;
cp /target/etc/network/interfaces.static /target/etc/network/interfaces;
;
</late_command>

</preseed> 
